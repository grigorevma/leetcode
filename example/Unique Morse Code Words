
Easy


International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: "a" maps to ".-", "b" maps to "-...", "c" maps to "-.-.", and so on.

For convenience, the full table for the 26 letters of the English alphabet is given below:

[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
Now, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, "cba" can be written as "-.-..--...", (which is the concatenation "-.-." + "-..." + ".-"). We'll call such a concatenation, the transformation of a word.

Return the number of different transformations among all words we have.

Example:
Input: words = ["gin", "zen", "gig", "msg"]
Output: 2
Explanation: 
The transformation of each word is:
"gin" -> "--...-."
"zen" -> "--...-."
"gig" -> "--...--."
"msg" -> "--...--."

There are 2 different transformations, "--...-." and "--...--.".



class Solution:
    def uniqueMorseRepresentations(self, words):
        """
        :type words: List[str]
        :rtype: int
        """
        x = morzeslists(words)
        return x
        
def getmorzeword(word):
    morzelist = [".-","-...","-.-.",
             "-..",".","..-.",
             "--.","....","..",
             ".---","-.-",".-..",
             "--","-.","---",".--.",
             "--.-",".-.","...","-",
             "..-","...-",".--",
             "-..-","-.--","--.."]
    alphabet = ['a', 'b', 'c',
            'd', 'e', 'f',
            'g', 'h', 'i',
            'j', 'k', 'l',
            'm', 'n', 'o',
            'p', 'q', 'r',
            's', 't', 'u',
            'v', 'w', 'x',
            'y', 'z']
    morze = {}
    for i, v in enumerate(morzelist):
        morze[alphabet[i]] = v
    x = ""
    for i in word:
        for k, v in morze.items():
            if i == k:
                x = x + v
    return x

def morzeslists(words):
    morzeslist = []
    for i in words:
        morzes = getmorzeword(i)
        morzeslist.append(morzes)

    numbers = {}
    for p in morzeslist:
        if p not in numbers:
            numbers[p] = 1
        else:
            numbers[p] += 1
    result = []
    for k, v in numbers.items():
        if v >= 1:
            result.append(k)
        else:
            continue
    return len(result)