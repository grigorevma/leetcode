Hard

You have k lists of sorted integers in ascending order. Find the smallest range that includes at least one number from each of the k lists.

We define the range [a,b] is smaller than range [c,d] if b-a < d-c or a < c if b-a == d-c.

Example 1:
Input:[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]
Output: [20,24]
Explanation: 
List 1: [4, 10, 15, 24,26], 24 is in range [20,24].
List 2: [0, 9, 12, 20], 20 is in range [20,24].
List 3: [5, 18, 22, 30], 22 is in range [20,24].


class Solution(object):
#220 ms	19.7 MB
    def smallestRange(self, nums):
        """
        :type nums: List[List[int]]
        :rtype: List[int]
        """
        v = []

        for i in range(len(nums)):
            for num in nums[i]:
                v.append((num, i))

        v.sort()

        k = len(nums)
        diff = float("inf")
        n = len(v)
        d = collections.defaultdict(int)
        cnt = 0 
        left = 0
        right = 0
        res = [0, 0]

        while right < n:
            if d[v[right][1]] == 0:
                cnt += 1
            d[v[right][1]] += 1
            while left <= right and cnt == k:
                if v[right][0] - v[left][0] < diff:
                    diff = v[right][0] - v[left][0]
                    res = [ v[left][0], v[right][0] ]

                d[v[left][1]] -= 1
                if d[v[left][1]] == 0:
                    del d[v[left][1]]
                    cnt -= 1
                left += 1
            right += 1

        return res